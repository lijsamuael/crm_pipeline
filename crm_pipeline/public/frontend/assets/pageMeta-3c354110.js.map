{"version":3,"file":"pageMeta-3c354110.js","sources":["../../../../frontend/node_modules/frappe-ui/src/utils/pageMeta.ts"],"sourcesContent":["import {\n  watch,\n  getCurrentInstance,\n  onBeforeUnmount,\n  type App,\n  type WatchStopHandle,\n} from 'vue'\n\ninterface PageMeta {\n  title?: string\n  emoji?: string\n  icon?: string\n}\n\ntype PageMetaFunction = () => PageMeta | null | undefined\ntype StopWatcherFunction = () => void\n\nlet faviconRef: HTMLLinkElement | null = null\nlet defaultFavIcon: string | null = null\n\nfunction initializeFavicon(): void {\n  if (typeof window !== 'undefined' && !faviconRef) {\n    faviconRef = document.querySelector('link[rel=\"icon\"]')\n    defaultFavIcon = faviconRef?.href || null\n  }\n}\n\nexport function usePageMeta(fn: PageMetaFunction): StopWatcherFunction {\n  // Initialize favicon if we're on the client\n  if (typeof window !== 'undefined') {\n    initializeFavicon()\n  }\n\n  const stopWatcher: WatchStopHandle = watch(\n    () => {\n      try {\n        return fn()\n      } catch (error) {\n        if (process.env.NODE_ENV === 'development') {\n          console.warn('Failed to parse pageMeta in', fn)\n          console.error(error)\n        }\n        return null\n      }\n    },\n    (pageMeta: PageMeta | null | undefined) => {\n      // Only execute on client side\n      if (typeof window === 'undefined') return\n      if (!pageMeta) return\n\n      if (pageMeta.title) {\n        document.title = pageMeta.title\n      }\n\n      // Ensure favicon ref is initialized\n      if (!faviconRef) initializeFavicon()\n\n      if (pageMeta.emoji) {\n        const href = `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${pageMeta.emoji}</text></svg>`\n        if (faviconRef) faviconRef.href = href\n      } else if (pageMeta.icon) {\n        if (faviconRef) faviconRef.href = pageMeta.icon\n      } else {\n        if (faviconRef && defaultFavIcon) faviconRef.href = defaultFavIcon\n      }\n    },\n    {\n      immediate: true,\n      deep: true,\n    },\n  )\n\n  // Auto-cleanup if called within a component (like <script setup>)\n  const instance = getCurrentInstance()\n  if (instance) {\n    onBeforeUnmount(stopWatcher)\n  }\n\n  return stopWatcher\n}\n\ninterface PageMetaPlugin {\n  install(app: App): void\n}\n\nexport default {\n  install(app: App): void {\n    app.mixin(createMixin())\n  },\n} as PageMetaPlugin\n\ninterface ComponentWithPageMeta {\n  $options: {\n    pageMeta?: PageMetaFunction\n  }\n  _pageMetaStopWatcher?: StopWatcherFunction\n}\n\nfunction createMixin() {\n  return {\n    mounted(this: ComponentWithPageMeta): void {\n      if (this.$options.pageMeta) {\n        const fn = this.$options.pageMeta.bind(this)\n        this._pageMetaStopWatcher = usePageMeta(fn)\n      }\n    },\n    beforeUnmount(this: ComponentWithPageMeta): void {\n      if (this._pageMetaStopWatcher) {\n        this._pageMetaStopWatcher()\n        this._pageMetaStopWatcher = undefined\n      }\n    },\n  }\n}\n"],"names":["faviconRef","defaultFavIcon","initializeFavicon","usePageMeta","fn","stopWatcher","watch","pageMeta","href","getCurrentInstance","onBeforeUnmount"],"mappings":"uDAiBA,IAAIA,EAAqC,KACrCC,EAAgC,KAEpC,SAASC,GAA0B,CAC7B,OAAO,OAAW,KAAe,CAACF,IACvBA,EAAA,SAAS,cAAc,kBAAkB,EACtDC,GAAiBD,GAAA,YAAAA,EAAY,OAAQ,KAEzC,CAEO,SAASG,EAAYC,EAA2C,CAEjE,OAAO,OAAW,KACFF,IAGpB,MAAMG,EAA+BC,EACnC,IAAM,CACA,GAAA,CACF,OAAOF,EAAG,OACI,CAKP,OAAA,IACT,CACF,EACCG,GAA0C,CAEzC,GAAI,SAAO,OAAW,MACjBA,EASL,GAPIA,EAAS,QACX,SAAS,MAAQA,EAAS,OAIvBP,GAA8BE,IAE/BK,EAAS,MAAO,CACZ,MAAAC,EAAO,kIAAkID,EAAS,KAAK,gBACzJP,IAAYA,EAAW,KAAOQ,EAAA,MACzBD,EAAS,KACdP,IAAYA,EAAW,KAAOO,EAAS,MAEvCP,GAAcC,IAAgBD,EAAW,KAAOC,EAExD,EACA,CACE,UAAW,GACX,KAAM,EACR,CAAA,EAKF,OADiBQ,KAEfC,EAAgBL,CAAW,EAGtBA,CACT","x_google_ignoreList":[0]}